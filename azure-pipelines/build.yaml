steps:
- task: NodeTool@0
  displayName: 'Use Node $(NodeVersion).x'
  inputs:
    versionSpec: '$(NodeVersion).x'
    checkLatest: true
- script: 'git config --local user.email rushbot@users.noreply.github.com'
  displayName: 'git config email'
- script: 'git config --local user.name Rushbot'
  displayName: 'git config name'
- script: 'node common/scripts/install-run-rush.js change --verify'
  displayName: 'Verify Change Logs'
- script: 'node common/scripts/install-run-rush.js install'
  displayName: 'Rush Install'
- script: 'node common/scripts/install-run-rush.js rebuild --verbose'
  displayName: 'Rush Rebuild'
- script: 'node common/scripts/install-run-rush.js test'
  displayName: 'Rush test'
- task: Npm@1
  displayName: 'npm pack libraries/swagger-validation-common'
  inputs:
    command: custom
    verbose: false
    customCommand: pack
    workingDir: $(Build.SourcesDirectory)/libraries/swagger-validation-common
- task: CopyFiles@2
  displayName: 'Copy Files to: drop'
  inputs:
    Contents: '$(Build.SourcesDirectory)/libraries/swagger-validation-common/*.tgz'
    TargetFolder: $(Build.SourcesDirectory)/libraries/swagger-validation-common/drop
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.SourcesDirectory)/libraries/swagger-validation-common/drop
- task: Npm@1
  displayName: 'npm pack apps/publish-pipeline-result'
  inputs:
    command: custom
    verbose: false
    customCommand: pack
    workingDir: $(Build.SourcesDirectory)/apps/publish-pipeline-result
- task: CopyFiles@2
  displayName: 'Copy Files to: drop'
  inputs:
    Contents: '$(Build.SourcesDirectory)/apps/publish-pipeline-result/*.tgz'
    TargetFolder: $(Build.SourcesDirectory)/apps/publish-pipeline-result/drop
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.SourcesDirectory)/apps/publish-pipeline-result/drop





